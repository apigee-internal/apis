swagger: '2.0'
info:
  title: Permissions API
  version: initial
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  Team:
    get:
      description: Retrieve a Team
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Team entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Team being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Team'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Team
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Team
x-templates: {}
paths: {}
definitions:
  Permissions:
    description: "<p>A Permissions resource contains one Permissions entity nested\
      \ inside another. The outer of these Permissions entities controls who can read,\
      \ write, delete and create within some other resource that belongs to some other\
      \ Apigee microservice. The nested Permissions entity controls who can read and\
      \ alter the outer one.\nThe resource to which access is governed by this Permission\
      \ entity is called the \"governed resource\"  and its URL is in the `governs`\
      \ property of the outer Permissions entity. The `create`, `retrieve`, `update`\
      \ and `delete` properties of the outer Permissions entity  each (optionally)\
      \ contain arrays of users, groups and teams that may perform the associated\
      \ action on the governed resource. The Permissions service makes no assumptions\
      \ about the governed resource\u2014it may not even exist.  The value of the\
      \ `self` property of the outer Permissions entity is the same as the URL of\
      \ the enclosing resource,  and the outer Permissions entity has the typical\
      \ creator/created/modifier/modified properties. <p> The outer Permissions entity\
      \ may also have a `sharingSets` property. If set, this property will contain\
      \ an array (conceptually a set) of URLs. Each of these URLs may have its own\
      \ Permissions entity in another Permissions document that grants access to that\
      \ URL. The create/retrieve/update/delete values from those other Permissons\
      \ entities are unioned with those of the current Permissions entity, recursively,\
      \ to determine the total sharing permissions granted for the governed resource.\
      \ The Permissions service makes no assumptions about the sharingSet resources\
      \ themselves\u2014they may not even exist, even though their Permissions documents\
      \ do. <p> The outer Permissions entity may have a `permissions` property whose\
      \ value is a nested Permissions entity. The nested Permissions entity specifies\
      \ who can access the outer Permissions entity\u2014it is the Permissions for\
      \ the Permissions.  The `governs` property of the nested Permissions entity\
      \ will contain the URL of the outer Permissions entity. The nested Permissons\
      \ entity does not have a sharingSet property, but instead uses the sharingSet\
      \ value of the first Permissions  entity in its hierarchical search unioning\
      \ permissions. The nested Permissions entity does not have creator/created/modifier/modified\
      \ properties. The nested Permissions entity may be missing entirely\u2014in\
      \ that case  the sharingSet permissions of the outer Permissions document will\
      \ be used to determine who can change the outer Permission entity. When unioning\
      \ permissions for the nested Permissions entity, the unioning is with the nested\
      \ Permissions entities of the sharingSets, not the outer ones. <p> The value\
      \ of the `self` property of the nested Permissions entity will extend the value\
      \ of the `self` property of the first  by adding a fragment identifier. This\
      \ ensures that a GET on either `self` value will always retrive the same enclosing\
      \ resource.\n"
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        type: string
        enum:
        - Permissions
      governs:
        type: string
        format: uri
      sharingSets:
        type: array
        items:
          type: string
          format: uri
      create:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      retrieve:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      update:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      delete:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      permissions:
        $ref: '#/definitions/PermissionsOfPermissions'
  PermissionsOfPermissions:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      kind:
        type: string
        enum:
        - Permissions
      governs:
        type: string
        format: uri
      retrieve:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      update:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
      delete:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - '#/x-interfaces/Team'
  Team:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      kind:
        type: string
        enum:
        - Team
      title:
        type: string
      users:
        type: array
        items:
          type: string
          format: uri
          x-interface: users.yaml#/x-interfaces/User
  Resource:
    type: object
    properties:
      self:
        description: "The self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for self is given, self will be\
          \ set to the URL of the resource being created. It is possible to set a\
          \ different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than itself. self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of self.\n"
        type: string
        format: uri
      isA:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. isA is usually set by the  client and then echo'd by\
          \ the server. In most applications, isA is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

