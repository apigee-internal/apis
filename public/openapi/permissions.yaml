swagger: '2.0'
info:
  title: Permissions API
  version: initial
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  ActionIsAllowed: &ActionIsAllowed
    get:
      description: Retrieve an ActionIsAllowed
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/ActionIsAllowed'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: ActionIsAllowed
  AllowedActions: &AllowedActions
    get:
      description: Retrieve an AllowedActions
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/AllowedActions'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: AllowedActions
  Apigee:
    get:
      description: Retrieve an Apigee
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee
  Apigee.permissions:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - description: "This query parameter specifies the \"governed\" resource whose\
          \ Permissions reosurce is returned \n"
        format: uri
        in: query
        name: resource
        required: true
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        name: showAll
        required: false
        type: boolean
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Permissions
      parameters:
      - description: The representation of the new Permissions being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Permissions'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Permissions
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Permissions
              type: string
          schema:
            $ref: '#/definitions/Permissions'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.permissions
  Apigee.resources-in-sharingset:
    get:
      parameters:
      - format: uri
        in: query
        name: sharingSet
        type: string
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/ResourceList'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.resources-in-sharingset
  Apigee.resources-shared-with:
    get:
      parameters:
      - format: uri
        in: query
        name: user
        required: true
        type: string
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/ResourceList'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.resources-shared-with
  Apigee.users-who-can-see:
    get:
      parameters:
      - format: uri
        in: query
        name: resource
        required: true
        type: string
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/ResourceList'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.users-who-can-see
  Page:
    get:
      description: Retrieve a Page
      parameters:
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Page'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Page
  Permissions:
    get:
      description: Retrieve a Permissions
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Permissions'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Permissions entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Permissions being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Permissions'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Permissions'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Permissions
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Permissions'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Permissions
  Resource:
    get:
      description: Retrieve a Resource
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Resource'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Resource
x-templates:
  /action-is-allowed{?resource,user,action}:
    parameters:
    - description: "This query parameter specifies the \"governed\" resource whose\
        \ ActionIsAllowed is returned \n"
      type: string
      format: uri
      required: true
      name: resource
      in: query
    - description: 'This query parameter specifies the user whose ActionIsAllowed
        is returned. The requesting user must be the same as the specified user.

        '
      type: string
      format: uri
      required: true
      name: user
      in: query
    - description: 'This query parameter specifies the action whose ActionIsAllowed
        is returned. The requesting user must be the same as the specified user.

        '
      type: string
      format: uri
      required: true
      name: action
      in: query
    <<: *ActionIsAllowed
  /allowed-actions{?resource,user}:
    parameters:
    - description: "This query parameter specifies the \"governed\" resource whose\
        \ AllowedActions are returned \n"
      type: string
      format: uri
      required: true
      name: resource
      in: query
    - description: 'This query parameter specifies the user whose AllowedActions are
        returned. The requesting user must be the same as the specified user.

        '
      type: string
      format: uri
      required: true
      name: user
      in: query
    <<: *AllowedActions
  '{Apigee-URL}':
    $ref: '#/x-interfaces/Apigee'
  '{Apigee-URL}/permissions':
    $ref: '#/x-interfaces/Apigee.permissions'
  '{Apigee-URL}/resources-in-sharingset':
    $ref: '#/x-interfaces/Apigee.resources-in-sharingset'
  '{Apigee-URL}/resources-shared-with':
    $ref: '#/x-interfaces/Apigee.resources-shared-with'
  '{Apigee-URL}/users-who-can-see':
    $ref: '#/x-interfaces/Apigee.users-who-can-see'
paths:
  /allowed-actions:
    $ref: '#/x-templates/~1allowed-actions{?resource,user}'
  /action-is-allowed:
    $ref: '#/x-templates/~1action-is-allowed{?resource,user,action}'
  /:
    $ref: '#/x-templates/{Apigee-URL}'
  /permissions:
    $ref: '#/x-templates/{Apigee-URL}~1permissions'
  /resources-shared-with:
    $ref: '#/x-templates/{Apigee-URL}~1resources-shared-with'
  /users-who-can-see:
    $ref: '#/x-templates/{Apigee-URL}~1users-who-can-see'
  /resources-in-sharingset:
    $ref: '#/x-templates/{Apigee-URL}~1resources-in-sharingset'
definitions:
  Permissions:
    description: "<p>A Permissions resource contains one Permissions entity nested\
      \ inside another. The outer of these Permissions entities controls who can send\
      \ GET, PUT/PATCH, POST and DELETE requests to some other  resource that belongs\
      \ to some other Apigee microservice. The nested Permissions entity controls\
      \ who can read and alter the outer one.\nThe resource to which access is governed\
      \ by this Permission entity is called the \"governed resource\"  and its URL\
      \ is in the `governs` property of the outer Permissions entity. The `create`,\
      \ `retrieve`, `update` and `delete` properties of the outer Permissions entity\
      \  each (optionally) contain arrays of users, groups and teams that may perform\
      \ the associated action on the governed resource. The Permissions service makes\
      \ no assumptions about the governed resource\u2014it may not even exist.  The\
      \ value of the `self` property of the outer Permissions entity is the same as\
      \ the URL of the enclosing resource,  and the outer Permissions entity has the\
      \ typical creator/created/modifier/modified properties. <p> The outer Permissions\
      \ entity may also have a `sharingSets` property. If set, this property will\
      \ contain an array (conceptually a set) of URLs. Each of these URLs may have\
      \ its own Permissions entity in another Permissions document that grants access\
      \ to that URL. The create/retrieve/update/delete values from those other Permissons\
      \ entities are unioned with those of the current Permissions entity, recursively,\
      \ to determine the total sharing permissions granted for the governed resource.\
      \ The Permissions service makes no assumptions about the sharingSet resources\
      \ themselves\u2014they may not even exist, even though their Permissions documents\
      \ do. <p> The outer Permissions entity may have a `permissions` property whose\
      \ value is a nested Permissions entity. The nested Permissions entity specifies\
      \ who can read, alter and delete the entire Permission resource, including both\
      \ Permissions entities.  The `governs` property of the nested Permissions entity\
      \ will contain the URL of the outer Permissions entity. The nested Permissons\
      \ entity does not have a sharingSet property, but instead uses the sharingSet\
      \ value of the first Permissions  entity in its hierarchical search unioning\
      \ permissions. When unioning permissions for the nested Permissions entity,\
      \ the unioning is with the nested Permissions entities of the sharingSets, not\
      \ the outer ones. The nested Permissions entity does not have creator/created/modifier/modified\
      \ properties. The nested Permissions entity may be missing entirely\u2014in\
      \ that case  the sharingSet permissions of the outer Permissions document will\
      \ be used to determine who can change the outer Permission entity. <p> The value\
      \ of the `self` property of the nested Permissions entity will extend the value\
      \ of the `self` property of the first  by adding a fragment identifier. This\
      \ ensures that a GET on either `self` value will always retrive the same enclosing\
      \ resource. <p> If no Permissions entity exists for a resource, it is ungoverned.\
      \ Anyone can do anything to an ungoverned resource, including creating a Permissions\
      \ entity for it, thereby preventing others from accessing it. When new resources\
      \ are created by Apigee microservices, they should always create a corresponding\
      \ Permissions entity for it. The most common Permissions entity for a new resource\
      \ will include the new resource in a sharingset rather than assigning specific\
      \ permissions. \n"
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        type: string
        enum:
        - Permissions
      governs:
        type: string
        format: uri
      sharingSets:
        type: array
        items:
          type: string
          format: uri
      create:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      retrieve:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      update:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      delete:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      permissions:
        $ref: '#/definitions/PermissionsOfPermissions'
    x-interface: '#/x-interfaces/Permissions'
  PermissionsOfPermissions:
    description: 'PermissionsOfPermissions is a slightly more restricted version of
      the <a href="#Permissions">Permissions</a> resource used to psecify who can
      see and change permissions for a resource.

      '
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Permissions
      governs:
        type: string
        format: uri
      retrieve:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      update:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
      delete:
        type: array
        items:
          type: string
          format: uri
          x-interface:
            oneOf:
            - users.yaml#/x-interfaces/User
            - users.yaml#/x-interfaces/Group
            - teams.yaml#/x-interfaces/Team
  Resource:
    type: object
    properties:
      _self:
        description: "The _self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for _self is given, _self will\
          \ be set to the URL of the resource being created. It is possible to set\
          \ a different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than it_self. _self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of _self.\n"
        type: string
        format: uri
      isA:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. isA is usually set by the  client and then echo'd by\
          \ the server. In most applications, isA is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
  ResourceList:
    description: A space-delimited list of URLs
    type: string
  AllowedActions:
    readOnly: true
    type: string
  ActionIsAllowed:
    readOnly: true
    type: boolean
  Apigee:
    x-interface: '#/x-interfaces/Apigee'
    readOnly: true
    properties:
      permissions:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.permissions'
      resources-shared-with:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.resources-shared-with'
      users-who-can-see:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.users-who-can-see'
      resources-in-sharingset:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.resources-in-sharingset'
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
  Put-If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: false
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

