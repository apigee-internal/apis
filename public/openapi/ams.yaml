swagger: '2.0'
info:
  description: 'The API Management Service API defines an updated and refined version
    of the concepts currently known as Developer, APP, and API Product in Edge. Of
    note is the introduction of the API concept, missing previously from Edge

    '
  title: API Management Service API
  version: initial
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  API:
    get:
      description: Retrieve an API
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an API entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the API being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/API'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an API
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/API'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: API
  APIProduct:
    get:
      description: Retrieve an APIProduct
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update an APIProduct entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the APIProduct being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/APIProduct'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete an APIProduct
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: APIProduct
  Apigee:
    get:
      description: Retrieve an Apigee
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee
  Apigee.apiProducts:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new APIProduct
      parameters:
      - description: The representation of the new APIProduct being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/APIProduct'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new APIProduct
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created APIProduct
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.apiProducts
  Apigee.apis:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new API
      parameters:
      - description: The representation of the new API being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/API'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new API
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created API
              type: string
          schema:
            $ref: '#/definitions/API'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.apis
  Apigee.bundles:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Bundle
      parameters:
      - description: The representation of the new Bundle being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Bundle'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Bundle
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Bundle
              type: string
          schema:
            $ref: '#/definitions/Bundle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.bundles
  Apigee.subscriptions:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    post:
      description: Create a new Subscription
      parameters:
      - description: The representation of the new Subscription being created
        in: body
        name: body
        schema:
          $ref: '#/definitions/Subscription'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Subscription
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Subscription
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.subscriptions
  Bundle:
    get:
      description: Retrieve a Bundle
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bundle'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Bundle entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Bundle being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Bundle'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bundle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Bundle
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Bundle'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Bundle
  Page:
    get:
      description: Retrieve a Page
      parameters:
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Page'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Page
  Subscription:
    get:
      description: Retrieve a Subscription
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Subscription entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Subscription being updated
        in: body
        name: body
        schema:
          $ref: '#/definitions/Subscription'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Subscription
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Subscription'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Subscription
x-templates:
  '{Apigee-URL}':
    $ref: '#/x-interfaces/Apigee'
  '{Apigee-URL}/apiProducts':
    $ref: '#/x-interfaces/Apigee.apiProducts'
  '{Apigee-URL}/apis':
    $ref: '#/x-interfaces/Apigee.apis'
  '{Apigee-URL}/bundles':
    $ref: '#/x-interfaces/Apigee.bundles'
  '{Apigee-URL}/subscriptions':
    $ref: '#/x-interfaces/Apigee.subscriptions'
paths:
  /:
    $ref: '#/x-templates/{Apigee-URL}'
  /apiProducts:
    $ref: '#/x-templates/{Apigee-URL}~1apiProducts'
  /bundles:
    $ref: '#/x-templates/{Apigee-URL}~1bundles'
  /subscriptions:
    $ref: '#/x-templates/{Apigee-URL}~1subscriptions'
  /apis:
    $ref: '#/x-templates/{Apigee-URL}~1apis'
definitions:
  API:
    description: 'APIs define sets of HTTP URL paths available on the World-wide Web
      <p>Historical Note: The APIProduct concept in Apigee Edge (circa 2016) is an
      amalgam of the API and APIProduct concepts of AMS

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "API"
        type: string
        enum:
        - API
      name:
        description: 'The name of the API. Must be unique amongst APIs of the same
          org.  The name of the product, along with the name of the org, may be used
          to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/apis/{api-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this API. Used
          in the UI. type: string

          '
      description:
        description: A textual description of the API
        type: string
      machine_readable_description:
        description: 'Defines the URI paths to which this API gives access. The format
          of the description is variable. The simplest is  a fragment URI that points
          to an array of paths in the same document. An alternative is to point to
          an OpenAPI Specification.

          '
        type: string
        format: uri
      environments:
        description: Environments where this API is available. Defines the domain
          names where the paths of the API will be available
        type: array
        items:
          type: string
          format: uri
          x-interface: deployment.yaml#/x-interfaces/Environment
      ui_proxiesProvidingPaths:
        description: "The API is specified by the uriPaths property, which defines\
          \ the paths of the API. As a convenience, the UI allows the uriPaths to\
          \ be specified by picking from the list of paths supported by a particular\
          \ proxy. If the user does this, the UI will use this  property to remember\
          \ the proxies that were used as sources of paths. Note that the ui_ prefix\
          \ on the name of this property indicates that it belongs to the ui namespace\u2014\
          using namespaces this way guarantees that \"add-on\" properties like this\
          \ will not collide \n"
        type: array
        items:
          type: string
          format: uri
    x-interface: '#/x-interfaces/API'
  APIProduct:
    description: 'APIProducts define a set of rules, such as quota, constraining client
      access to a specific API.  <p>Historical Note: The APIProduct concept in Apigee
      Edge (circa 2016) is an amalgam of the API and APIProduct concepts

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APIProduct"
        type: string
        enum:
        - APIProduct
      name:
        description: 'The name of the APIProduct. Must be unique amongst APIProduct
          of the same org.  The name of the APIProduct, along with the name of the
          org, may be used to perform queries using URI templates of the form: https://apigee.com/organizations/{org-name}/apiproduct/{apiproduct-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this APIProduct.
          Used in the UI.

          '
        type: string
      description:
        description: A textual description of the APIProduct
        type: string
      api:
        description: 'The API exposed by this APIProduct.

          '
        type: string
        format: uri
        x-interface: '#/x-interfaces/API'
      scopes:
        description: 'Defines the OAUTH scopes to which this APIProduct gives access

          '
        type: array
        items:
          type: string
      quota:
        description: 'Defines the quota of requests allowed by this APIProduct.

          '
        $ref: '#/definitions/Quota'
      ratePlan:
        type: string
        format: uri
        x-interface: mint.yaml#/x-interfaces/RatePlan
    x-interface: '#/x-interfaces/APIProduct'
  Bundle:
    description: 'Bundles allow providers to offer a set of APIProducts under a new
      ratePlan

      '
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "APIProduct"
        type: string
        enum:
        - APIProduct
      name:
        description: 'The name of the Bundle. Must be unique amongst Bundles of the
          same org.  The name of the Bundle, along with the name of the org, may be
          used to perform queries using URI templates of the form: https://apigee.com/organizations/{org-name}/bundle/{bundle-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this APIProduct.
          Used in the UI.

          '
        type: string
      description:
        description: A textual description of the Bundle
        type: string
      apiProducts:
        description: The list of APIProducts in the bundle
        type: array
        items:
          type: string
          format: uri
          x-interface: '#/x-interfaces/APIProduct'
      ratePlan:
        description: The ratePlan for the bundle. Overrides the individual ratePlans
          in the APIProducts
        type: string
        format: uri
        x-interface: mint.yaml#/x-interfaces/RatePlan
    x-interface: '#/x-interfaces/Bundle'
  Subscription:
    description: "Subscriptions record the usage of an <a href=\"#APIProduct\">APIProduct</a>\
      \ or <a href=\"#Bundle\">Bundle</a> by a subscriber (a <a href=\"users/#User\"\
      >User</a> or <a href=\"users/#Group\">Group</a> or <a href=\"teams/#Team\">Team</a>).\
      \  <p>Historical Note: The App concept in Apigee Edge (circa 2015) is similar\
      \ to the Subscription concept, to the point where it can be considered a renaming.\
      \ App was not the best choice of name because the concept  being modelled is\
      \ not an app, it is just a key-protected usage of an APIProduct. Using one of\
      \ these subscriptions per app is only a suggestion\u2014it is not possible to\
      \ know whether customers use  a single subscription for a single app, a single\
      \ subscription for many apps, or a many subscriptions for one app. \n"
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        description: The value of this property indicates the 'kind' or 'type' of
          the object. Its value must be the string "Subscription"
        type: string
        enum:
        - Subscription
      name:
        description: 'The name of the Subscription. Must be unique amongst Subscription
          of the same org.  The name of the Subscription, along with the name of the
          org, may be used to perform queries using URI templates of the form: https://api.enterprise.apigee.com/v1/organizations/{org-name}/subscription/{Subscription-name}

          '
        type: string
      displayName:
        description: 'The name to be used to display to humans for this Subscription.
          Used in the UI.

          '
      description:
        description: A textual description of the Subscription
        type: string
      apiProducts:
        description: 'The list of APIProducts to which this Subscription gives access

          '
        type: array
        items:
          type: string
          format: uri
          x-interface: '#/x-interfaces/APIProduct'
      keys:
        description: "Subscriptions may include an arbitrary number of keys. Each\
          \ key unlocks the same APIProducts with the same quotas and ratePlans, so\
          \ from a functional perspective, the keys are completely interchangeable.\
          \ Managing multiple keys allows subscribers to track the usage of their\
          \ subscriptions in different contexts. For example, a developer of a client\
          \ app may wish to use the same subscription  in multiple editions of the\
          \ same application, so all usage counts against the same quota. Using different\
          \ keys allows the developer to track which users are using the iOS version\
          \ versus the Android version versus the web site, or which users are using\
          \ a new experimental version versus the classic version. This information\
          \ is available (presumably) to the developer through the provider's API\
          \ portal. \n"
        type: array
        items:
          $ref: '#/definitions/Key'
      subscriber:
        description: "The <a href=\"users/#User\">User</a> or <a href=\"users/#Group\"\
          >Group</a> or <a href=\"teams/#Team\">Team</a> responsible for the subscription.\
          \ This person, or group of people, may get occasional emails, for example\
          \ concerning quota overages, or subscriptions elapsing. \n"
        type: string
        format: uri
        x-interface:
          oneOf:
          - users.yaml#/x-interfaces/User
          - users.yaml#/x-interfaces/Group
          - teams.yaml#/x-interfaces/Team
      account:
        description: The financial account to which the subscription should be charged.
          A POST or PATCH that contains a value for this property will fail if the
          user under whose credentials the call is made does not have permission to
          access the specified account
        type: string
        format: uri
        x-interface: mint.yaml#/x-interfaces/Account
      approved:
        description: "Whether or not the subscription has been approved by the API\
          \ owner \n"
        type: boolean
    x-interface: '#/x-interfaces/Subscription'
  Key:
    properties:
      key:
        description: 'The API key

          '
        type: string
      issued:
        description: 'The date when the key and secret were issued

          '
        type: string
        format: date-time
      tags:
        description: 'tags are an array of strings that may be associated with the
          key. Tags will be displayed in analytics, allowing client application developers
          to track which applications or application editions/versions genenrated
          traffic.

          '
        type: array
        items:
          type: string
      approved:
        description: "Whether or not the credentials have been approved by the API\
          \ owner \n"
        type: boolean
  Quota:
    properties:
      limit:
        description: The maximum number of requests that are allowed in a particular
          time-interval for a given subscription
        type: integer
      interval:
        description: The size of the time-interval
        type: integer
      timeunit:
        description: The time units that the interval value is expressed in.
        type: string
        enum:
        - second
        - minute
        - hour
        - day
        - month
  Apigee:
    x-interface: '#/x-interfaces/Apigee'
    readOnly: true
    properties:
      apiProducts:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.apiProducts'
      bundles:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.bundles'
      subscriptions:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.subscriptions'
      apis:
        format: uri
        type: string
        readOnly: true
        x-interface: '#/x-interfaces/Apigee.apis'
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      items:
        type: array
        items:
          type: object
    readOnly: true
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Page
      items:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
  Resource:
    type: object
    properties:
      self:
        description: "The self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for self is given, self will be\
          \ set to the URL of the resource being created. It is possible to set a\
          \ different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than itself. self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of self.\n"
        type: string
        format: uri
      isA:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. isA is usually set by the  client and then echo'd by\
          \ the server. In most applications, isA is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

