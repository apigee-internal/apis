swagger: '2.0'
info:
  title: Doc Store API
  version: '0.1'
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  Apigee:
    get:
      description: Retrieve an Apigee
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee
  Apigee.docs:
    post:
      description: Create a new Doc
      parameters:
      - description: The representation of the new Doc being created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Doc'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Doc
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Doc
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.docs
  Apigee.folders:
    post:
      description: Create a new Folder
      parameters:
      - description: The representation of the new Folder being created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Folder'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Folder
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Folder
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.folders
  Apigee.sharedWithMe:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.sharedWithMe
  Apigee.teams:
    post:
      description: Create a new Team
      parameters:
      - description: The representation of the new Team being created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Team'
      - description: The media type of the body
        in: header
        name: Content-Type
        required: true
        type: string
      responses:
        '201':
          description: Created new Team
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: Value of ETag required for subsequent updates
              type: string
            Location:
              description: perma-link URL of newly-created Team
              type: string
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.teams
  Apigee.trash:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee.trash
  Content:
    get:
      description: Retrieve a Content
      parameters:
      - $ref: '#/parameters/Accept'
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Content'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    put:
      consumes:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      description: Create or Update a Content entity
      parameters:
      - $ref: '#/parameters/Put-If-Match'
      - description: The representation of the Content being replaced
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Content'
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Content'
        '201':
          description: Created new Content
          headers:
            Content-Type:
              description: The media type of the returned body
              type: string
            Location:
              description: perma-link URL of newly-created Content
              type: string
          schema:
            $ref: '#/definitions/Content'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Content
      produces:
      - application/x-yaml
      - text/yaml
      - text/html
      - text/plain
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Content'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Content
  Doc:
    get:
      description: Retrieve a Doc
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Doc entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Doc being updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Doc'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Doc
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Doc'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Doc
  Folder:
    get:
      description: Retrieve a Folder
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Folder entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Folder being updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Folder'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Folder
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Folder'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Folder
  Folder.contents:
    get:
      parameters:
      - in: query
        name: orderBy
        required: false
        type: string
      - enum:
        - ascending
        - descending
        in: query
        name: direction
        required: false
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      responses:
        '200':
          description: description
          headers:
            Content-Location:
              description: perma-link URL of collection
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
          schema:
            $ref: '#/definitions/MultiValuedRelationship'
        '303':
          $ref: '#/responses/303'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: Retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Folder.contents
  Page:
    get:
      description: Retrieve a Page
      parameters:
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Page'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Page
  Team:
    get:
      description: Retrieve a Team
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    patch:
      consumes:
      - application/merge-patch+json
      description: Update a Team entity
      parameters:
      - $ref: '#/parameters/If-Match'
      - description: The subset of properties of the Team being updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Team'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '409':
          $ref: '#/responses/409'
        default:
          $ref: '#/responses/default'
    delete:
      description: Delete a Team
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Team
x-templates:
  '{Apigee-URL}':
    $ref: '#/x-interfaces/Apigee'
  '{Apigee-URL}/docs':
    $ref: '#/x-interfaces/Apigee.docs'
  '{Apigee-URL}/folders':
    $ref: '#/x-interfaces/Apigee.folders'
  '{Apigee-URL}/homeFolder':
    $ref: '#/x-interfaces/Folder'
  '{Apigee-URL}/homeFolder/contents':
    $ref: '#/x-interfaces/Folder.contents'
  '{Apigee-URL}/sharedWithMe':
    $ref: '#/x-interfaces/Apigee.sharedWithMe'
  '{Apigee-URL}/teams':
    $ref: '#/x-interfaces/Apigee.teams'
  '{Apigee-URL}/trash':
    $ref: '#/x-interfaces/Apigee.trash'
  '{Doc-URL}/content':
    $ref: '#/x-interfaces/Content'
  '{Folder-URL}/contents':
    $ref: '#/x-interfaces/Folder.contents'
paths:
  /:
    $ref: '#/x-templates/{Apigee-URL}'
  /docs:
    $ref: '#/x-templates/{Apigee-URL}~1docs'
  /folders:
    $ref: '#/x-templates/{Apigee-URL}~1folders'
  /teams:
    $ref: '#/x-templates/{Apigee-URL}~1teams'
  /sharedWithMe:
    $ref: '#/x-templates/{Apigee-URL}~1sharedWithMe'
  /trash:
    $ref: '#/x-templates/{Apigee-URL}~1trash'
  /homeFolder:
    $ref: '#/x-templates/{Apigee-URL}~1homeFolder'
  /homeFolder/contents:
    $ref: '#/x-templates/{Apigee-URL}~1homeFolder~1contents'
definitions:
  ErrorResponse:
    type: string
  Apigee:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Apigee
      docs:
        description: URL of a Collection of Docs
        format: uri
        type: string
        x-interface: '#/x-interfaces/Apigee.docs'
      folders:
        description: URL of a Collection of Folders
        format: uri
        type: string
        x-interface: '#/x-interfaces/Apigee.folders'
      teams:
        description: URL of a Collection of Teams
        format: uri
        type: string
        x-interface: '#/x-interfaces/Apigee.teams'
      sharedWithMe:
        description: URL of a Collection of Folders and Docs and Teams
        format: uri
        type: string
        x-interface: '#/x-interfaces/Apigee.sharedWithMe'
      trash:
        description: URL of a Collection of Folders and Docs and Teams
        format: uri
        type: string
        x-interface: '#/x-interfaces/Apigee.trash'
      homeFolder:
        description: URL of the home folder of the current user (user that issues
          the request)
        format: uri
        type: string
        x-interface: '#/x-interfaces/Folder'
    readOnly: true
    x-interface: '#/x-interfaces/Apigee'
  Folder:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      description:
        description: A description of the Folder. Natural-language text that may include
          whitespace. Expected to be a relatively short phrase or sentence.
        type: string
      contents:
        description: URL of a Collection of Docs and Folders and Teams
        format: uri
        readOnly: true
        type: string
        x-interface: '#/x-interfaces/Folder.contents'
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-interface: '#/x-interfaces/Folder'
      isA:
        type: string
        enum:
        - Folder
      name:
        type: string
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
    x-interface: '#/x-interfaces/Folder'
  Doc:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      description:
        description: A description of the Document. Natural-language text that may
          include whitespace. Expected to be a relatively short phrase or sentence.
        type: string
      content:
        description: URL of a Content
        format: uri
        type: string
        x-interface: '#/x-interfaces/Content'
        readOnly: true
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-interface: '#/x-interfaces/Folder'
      isA:
        type: string
        enum:
        - Doc
      name:
        type: string
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
    x-interface: '#/x-interfaces/Doc'
  Content:
    type: string
    x-interface: '#/x-interfaces/Content'
  Team:
    allOf:
    - $ref: '#/definitions/PersistentResource'
    properties:
      isA:
        type: string
        enum:
        - Team
      name:
        type: string
      users:
        type: array
        items:
          type: string
          format: uri
          x-interface: users.yaml#/x-interfaces/User
      folder:
        description: URL of a Folder
        format: uri
        type: string
        x-interface: '#/x-interfaces/Folder'
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
    x-interface: '#/x-interfaces/Team'
  Permission:
    properties:
      actor:
        format: URL
        type: string
      action:
        type: string
  Resource:
    type: object
    properties:
      _self:
        description: "The _self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for _self is given, _self will\
          \ be set to the URL of the resource being created. It is possible to set\
          \ a different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than it_self. _self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of _self.\n"
        type: string
        format: uri
      isA:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. isA is usually set by the  client and then echo'd by\
          \ the server. In most applications, isA is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      contents:
        type: array
        items:
          type: object
    readOnly: true
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Page
      contents:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
      previous_page:
        type: string
        format: uri
        x-interface: common.yaml#/x-interfaces/Page
    readOnly: true
    x-interface: common.yaml#/x-interfaces/Page
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
  Put-If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: false
    type: string
responses:
  '303':
    description: See other. Server is redirecting client to a different resource
    headers:
      Location:
        description: URL of other resource
        type: string
  '400':
    description: Bad Request. Client request in error
    schema:
      $ref: '#/definitions/ErrorResponse'
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema:
      $ref: '#/definitions/ErrorResponse'
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  '404':
    description: Not Found. Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse'
  '406':
    description: Not Acceptable. Requested media type not available
    schema:
      $ref: '#/definitions/ErrorResponse'
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema:
      $ref: '#/definitions/ErrorResponse'
  default:
    description: 5xx errors and other stuff
    schema:
      $ref: '#/definitions/ErrorResponse'
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []
