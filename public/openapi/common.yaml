swagger: '2.0'
info:
  title: Common entities used in multiple API specifications
  version: '0.1'
consumes:
- application/json
produces:
- application/json
- text/html
x-interfaces:
  Apigee:
    get:
      description: Retrieve an Apigee
      parameters:
      - $ref: '#/parameters/Accept'
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Apigee'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Apigee
  Page:
    get:
      description: Retrieve a Page
      parameters:
      - in: query
        items:
          type: string
        name: properties
        required: false
        type: array
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        required: false
        type: integer
      responses:
        '200':
          description: successful
          headers:
            Content-Location:
              description: perma-link URL of resource
              type: string
            Content-Type:
              description: The media type of the returned body
              type: string
            ETag:
              description: this value must be echoed in the If-Match header of every
                PATCH or PUT
              type: string
          schema:
            $ref: '#/definitions/Page'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        default:
          $ref: '#/responses/default'
    head:
      description: retrieve HEAD
      responses:
        '200':
          $ref: '#/responses/standard_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    options:
      description: Retrieve OPTIONS
      parameters:
      - $ref: '#/parameters/Access-Control-Request-Method'
      - $ref: '#/parameters/Access-Control-Request-Headers'
      responses:
        '200':
          $ref: '#/responses/options_200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        default:
          $ref: '#/responses/default'
    x-id: Page
x-templates:
  '{Apigee-URL}':
    $ref: '#/x-interfaces/Apigee'
paths:
  /:
    $ref: '#/x-templates/{Apigee-URL}'
definitions:
  Apigee:
    description: 'An Apigee is the root of the tree of resources in an Apigee Environment
      (that is, an Environment that contains Apigee''s own software)

      '
    readOnly: true
    type: object
    x-interface: '#/x-interfaces/Apigee'
  Page:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Page
      contents:
        type: array
        items:
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        x-interface: '#/x-interfaces/Page'
      previous_page:
        type: string
        format: uri
        x-interface: '#/x-interfaces/Page'
    readOnly: true
    x-interface: '#/x-interfaces/Page'
  Collection:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      isA:
        type: string
        enum:
        - Collection
      contents:
        type: array
        items:
          type: object
    readOnly: true
  MultiValuedRelationship:
    readOnly: true
    x-oneOf:
    - $ref: '#/definitions/Collection'
    - $ref: '#/definitions/Page'
  Resource:
    type: object
    properties:
      _self:
        description: "The _self property defines which resource's property-value pairs\
          \ are in the data. On create, if no value for _self is given, _self will\
          \ be set to the URL of the resource being created. It is possible to set\
          \ a different value on create\u2014this is used to create a resource that\
          \ contans information about a different resource than it_self. _self specifies\
          \ RDF's 'subject' concept. It is similar to the @id property of RDF/JSON.\
          \ It is permissible, although unusual, to update the value of _self.\n"
        type: string
        format: uri
        readOnly: true
      isA:
        description: "Specifies the type of the entity. We avoid the word type because\
          \ it's a global function in some programing languages, and we don't want\
          \ name collisions. isA is usually set by the  client and then echo'd by\
          \ the server. In most applications, isA is immutable after create, although\
          \ some applications may allow change. \n"
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/definitions/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format
          string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An
          ISO-format string.
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the
          resource.
        type: string
        format: date-time
        readOnly: true
parameters:
  Accept:
    description: specifies the requested media type - required
    in: header
    name: Accept
    required: true
    type: string
  Access-Control-Request-Headers:
    description: specifies the custom headers the client wishes to use
    in: header
    name: Access-Control-Request-Headers
    required: true
    type: string
  Access-Control-Request-Method:
    description: specifies the method the client wishes to use
    in: header
    name: Access-Control-Request-Method
    required: true
    type: string
  If-Match:
    description: specifies the last known ETag value of the resource being modified
    in: header
    name: If-Match
    required: true
    type: string
responses:
  '400':
    description: Bad Request. Client request in error
    schema: {}
  '401':
    description: Unauthorized. Client authentication token missing from request
    schema: {}
  '403':
    description: Forbidden. Client authentication token does not permit this method
      on this resource
    schema: {}
  '404':
    description: Not Found. Resource not found
    schema: {}
  '406':
    description: Not Acceptable. Requested media type not available
    schema: {}
  '409':
    description: Conflict. Value provided in If-Match header does not match current
      ETag value of resource
    schema: {}
  default:
    description: 5xx errors and other stuff
    schema: {}
  options_200:
    description: successful
    headers:
      Access-Control-Allow-Headers:
        description: headers allowed
        type: string
      Access-Control-Allow-Methods:
        description: methods allowed
        type: string
      Access-Control-Allow-Origin:
        description: origins allowed
        type: string
      Access-Control-Max-Age:
        description: length of time response can be cached
        type: string
  standard_200:
    description: successful
    headers:
      Content-Location:
        description: perma-link URL of resource
        type: string
      Content-Type:
        description: The media type of the returned body
        type: string
      ETag:
        description: this value must be echoed in the If-Match header of every PATCH
          or PUT
        type: string

