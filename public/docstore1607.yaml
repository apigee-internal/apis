title: Doc Store API
version: "0.1"
consumes: application/json
produces: application/json text/html
conventions:
  queryPathSelectorLocation: pathSegment
  patchConsumes: application/merge-patch+json
  errorResponse:
    type: string
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []
entities:
  Apigee:
    allOf:
    - $ref: 'common.yaml#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Apigee]
      docs:
        description: URL of a Collection of Docs
        format: uri
        type: string        
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Doc'
          multiplicity: 0:n
      folders:
        description: URL of a Collection of Folders
        format: uri
        type: string        
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Folder'
          multiplicity: 0:n
      teams:
        description: URL of a Collection of Teams
        format: uri
        type: string        
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Team'
          multiplicity: 0:n
      sharedWithMe:
        description: URL of a Collection of Folders and Docs
        format: uri
        type: string
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Folder #Doc'
          multiplicity: 0:n
          readOnly: true
      trash:
        description: URL of a Collection of Folders and Docs
        format: uri
        type: string
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Folder #Doc'
          multiplicity: 0:n
          readOnly: true
      homeFolder:
        description: URL of the home folder of the current user (user that issues the request)
        format: uri
        type: string
        relationship: '#Folder'
    wellKnownURLs: /
    queryPaths: 
    - docs
    - folders
    - sharedWithMe
    - trash
    - teams
    - homeFolder
    - homeFolder/contents
    readOnly: true
  Folder:
    allOf:
    - $ref: 'common.yaml#/entities/PersistentResource'
    queryPaths: [contents]
    properties:
      contents:
        description: URL of a Collection of Docs and Folders
        format: uri
        readOnly: true
        type: string
        relationship:
          collectionResource: 'common.yaml#MultiValuedRelationship'
          entities: '#Doc #Folder #Team'
          multiplicity: 0:n
          queryParameters:
            includeTrash:
              type: boolean
              required: false
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Folder]
      name:
        type: string
      permissions:
        type: array
        items: 
          $ref: '#/entities/Permission'
  Doc:
    allOf:
    - $ref: 'common.yaml#/entities/PersistentResource'
    queryPaths: [content]
    properties:
      content_type:
        description: The media type of the content of the Doc
        type: string
      content:
        description: URL of a Content
        format: uri
        type: string
        relationship: '#Content'
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Doc]
      name:
        type: string
      permissions:
        type: array
        items: 
          $ref: '#/entities/Permission'
  Content:
    type: string
    consumes: application/x-yaml text/yaml text/html text/plain
    produces: application/x-yaml text/yaml text/html text/plain
  Team:
    allOf:
    - $ref: common.yaml#/entities/PersistentResource
    properties:
      kind:
        type: string
        enum: [Team]
      title:
        type: string
      users:
        type: array
        items:
          type: string
          format: uri
          relationship: users.yaml#User      
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      permissions:
        type: array
        items: 
          $ref: '#/entities/Permission'
  Permission: 
    properties:
      actor:
        format: URL
        type: string
      action:
        type: string  
implementationPrivateInformation:
  Doc:
    permalinkTemplate:
      template: /c3Rvc-ZG9j-{implementation_key} 
      variables:
        implementation_key:
          type: integer
  Folder:
    permalinkTemplate:
      template: /c3Rvc-Zmxk-{implementation_key} 
      variables:
        implementation_key:
          type: integer  
  Team:
    permalinkTemplate:
      template: /c3Rvc-dGVh-{implementation_key} 
      variables:
        implementation_key:
          type: integer 
