title: Doc Store API
version: "0.1"
consumes: application/json
produces: application/json text/html
conventions:
  patchConsumes: application/merge-patch+json
  errorResponse:
    type: string
securityDefinitions:
  sso:
    type: oauth2
    scopes: {}
    flow: application
    tokenUrl: whatever
security:
- sso: []
entities:
  Store:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Store]
      home:
        description: URL of the current user's 'home' Folder
        format: uri
        type: string
        relationship: '#Folder'
      sharedWithMe:
        description: URL of a Collection of Folders and Docs
        format: uri
        type: string
        relationship:
          collectionResource: '#MultiValuedRelationshipResource'
          entities: '#Folder #Doc'
          multiplicity: 0:n
          readOnly: true
      docs:
        description: URL of a Collection of Docs
        format: uri
        type: string        
        relationship:
          collectionResource: '#MultiValuedRelationshipResource'
          entities: '#Doc'
          multiplicity: 0:n
      folders:
        description: URL of a Collection of Folders
        format: uri
        type: string        
        relationship:
          collectionResource: '#MultiValuedRelationshipResource'
          entities: '#Folder'
          multiplicity: 0:n
      groups:
        description: URL of a Collection of Groups
        format: uri
        type: string        
        relationship:
          collectionResource: '#MultiValuedRelationshipResource'
          entities: '#Group'
          multiplicity: 0:n
    wellKnownURLs: /store
    queryPaths: 
    - home
    - home/contents
    - sharedWithMe
    - docs
    - folders
    - groups
    readOnly: true
  Folder:
    allOf:
    - $ref: '#/entities/PersistentResource'
    queryPaths: [contents]
    properties:
      contents:
        description: URL of a Collection of Docs and Folders
        format: uri
        readOnly: true
        type: string
        relationship:
          collectionResource: '#MultiValuedRelationshipResource'
          entities: '#Doc #Folder'
          multiplicity: 0:n
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Folder]
      name:
        type: string
      permissions:
        type: array
        items: 
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Doc:
    allOf:
    - $ref: '#/entities/PersistentResource'
    queryPaths: [content]
    properties:
      content_type:
        description: The media type of the content of the Doc
        type: string
      content:
        description: URL of a Content
        format: uri
        type: string
        relationship: '#Content'
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Doc]
      name:
        type: string
      permissions:
        type: array
        items: 
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Group:
    allOf:
    - $ref: '#/entities/PersistentResource'
    properties:
      members:
        description: Array of URLs of Users
        type: array
        items:
          type: string
          format: uri
      folder:
        description: URL of a Folder
        format: uri
        type: string
        relationship: '#Folder'
      kind:
        type: string
        enum: [Group]
      name:
        type: string
      permissions:
        type: array
        items: 
          properties:
            actor:
              format: URL
              type: string
            action:
              type: string
  Content:
    type: string
    consumes: application/x-yaml text/yaml text/html text/plain
    produces: application/x-yaml text/yaml text/html text/plain
  Page:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Page]
      items:
        type: array
        items: 
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
      previous_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
    queryParameters:
      properties:
        items:
          type: string
        type: array
        required: false
      limit:
        type: integer
        minimum: 1
        maximum: 1000
        required: false
    readOnly: true
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    queryParameters:
      properties:
        items : 
          type: string
        type: array
        required: false
      limit:
        type: integer
        minimum: 1
        maximum: 1000
        required: false
      orderBy: # required if limit is provided
        type: string
        required: false
      direction:
        type: string
        required: false
        enum: ['ascending', 'descending']
    readOnly: true
  MultiValuedRelationshipResource:
    readOnly: true
    oneOf:
      - $ref: '#/entities/Collection'
      - $ref: '#/entities/Page'
  Resource:
    type: object
    properties:
      _self:
        type: string
        readOnly: true
      kind:
        type: string
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      created:
        type: string
        format: date-time
        readOnly: true
      creator:
        type: string
        format: URL
        readOnly: true
      modified:
        type: string
        format: date-time
        readOnly: true
      modifier:
        type: string
        format: date-time
        readOnly: true
implementationPrivateInformation:
  Group:
    permalinkTemplate:
      template: /c3Rvc-Z3Jw-{implementation_key} 
      variables:
        implementation_key:
          type: integer
  Doc:
    permalinkTemplate:
      template: /c3Rvc-ZG9j-{implementation_key} 
      variables:
        implementation_key:
          type: integer
  Folder:
    permalinkTemplate:
      template: /c3Rvc-Zmxk-{implementation_key} 
      variables:
        implementation_key:
          type: integer  
