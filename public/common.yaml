title: Common entities used in multiple API specifications
version: "0.1"
entities:
  Apigee:
    description: >
      An Apigee is the root of the tree of resources in an Apigee Environment (that is, an Environment that contains Apigee's own software)
    readOnly: true
    well_known_URLs: /
    type: object  
  Page:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Page]
      items:
        type: array
        items: 
          type: object
      collection:
        type: string
        format: uri
      next_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
      previous_page:
        type: string
        format: uri
        relationship:
          entities: '#Page'
          readOnly: True
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    readOnly: true
  Collection:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      kind:
        type: string
        enum: [Collection]
      items:
        type: array
        items: 
          type: object
    query_parameters:
    - name: properties
      items:
        type: string
      type: array
      required: false
    - name: limit
      type: integer
      minimum: 1
      maximum: 1000
      required: false
    - name: orderBy # required if limit is provided
      type: string
      required: false
    - name: direction
      type: string
      required: false
      enum: ['ascending', 'descending']
    readOnly: true
  MultiValuedRelationship:
    readOnly: true
    oneOf:
      - $ref: '#/entities/Collection'
      - $ref: '#/entities/Page'
  Resource:
    type: object
    properties:
      self:
        description: >
          The self property defines which resource's property-value pairs are in the data. On create, if no value for self is given, self will be set to the URL of the resource being created.
          It is possible to set a different value on createâ€”this is used to create a resource that contans information about a different resource than itself. self specifies RDF's 'subject'
          concept. It is similar to the @id property of RDF/JSON. It is permissible, although unusual, to update the value of self.
        type: string
        format: uri
        usage: c r u
      kind:
        description: >
          Specifies the type of the entity. We avoid the word type because it's a global function in some programing languages, and we don't want name collisions. Kind is usually set by the 
          client and then echo'd by the server. In most applications, kind is immutable after create, although some applications may allow change. 
        type: string
        usage: c r u
  PersistentResource:
    allOf:
    - $ref: '#/entities/Resource'
    properties:
      created:
        description: The date and time that the resource was created. An ISO-format string.
        type: string
        format: date-time
        readOnly: true
      creator:
        description: The identity of the creator of the resource. A URL.
        type: string
        format: uri
        readOnly: true
      modified:
        description: The date and time of the last modification to the resource. An ISO-format string. 
        type: string
        format: date-time
        readOnly: true
      modifier:
        description: The identity of the user that made the last modification to the resource.
        type: string
        format: date-time
        readOnly: true